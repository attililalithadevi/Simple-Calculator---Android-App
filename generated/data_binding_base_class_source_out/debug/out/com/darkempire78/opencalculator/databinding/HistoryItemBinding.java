// Generated by view binder compiler. Do not edit!
package com.darkempire78.opencalculator.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.darkempire78.opencalculator.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class HistoryItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView historyItemCalculation;

  @NonNull
  public final TextView historyItemResult;

  @NonNull
  public final View historySameDateSeparator;

  @NonNull
  public final View historySeparator;

  @NonNull
  public final TextView historyTime;

  private HistoryItemBinding(@NonNull CardView rootView, @NonNull TextView historyItemCalculation,
      @NonNull TextView historyItemResult, @NonNull View historySameDateSeparator,
      @NonNull View historySeparator, @NonNull TextView historyTime) {
    this.rootView = rootView;
    this.historyItemCalculation = historyItemCalculation;
    this.historyItemResult = historyItemResult;
    this.historySameDateSeparator = historySameDateSeparator;
    this.historySeparator = historySeparator;
    this.historyTime = historyTime;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static HistoryItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static HistoryItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.history_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static HistoryItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.history_item_calculation;
      TextView historyItemCalculation = ViewBindings.findChildViewById(rootView, id);
      if (historyItemCalculation == null) {
        break missingId;
      }

      id = R.id.history_item_result;
      TextView historyItemResult = ViewBindings.findChildViewById(rootView, id);
      if (historyItemResult == null) {
        break missingId;
      }

      id = R.id.history_same_date_separator;
      View historySameDateSeparator = ViewBindings.findChildViewById(rootView, id);
      if (historySameDateSeparator == null) {
        break missingId;
      }

      id = R.id.history_separator;
      View historySeparator = ViewBindings.findChildViewById(rootView, id);
      if (historySeparator == null) {
        break missingId;
      }

      id = R.id.history_time;
      TextView historyTime = ViewBindings.findChildViewById(rootView, id);
      if (historyTime == null) {
        break missingId;
      }

      return new HistoryItemBinding((CardView) rootView, historyItemCalculation, historyItemResult,
          historySameDateSeparator, historySeparator, historyTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
